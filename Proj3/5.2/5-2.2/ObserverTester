

import java.util.ArrayList;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 * Test program to test the updated bar graph
 * 
 * @author Arselan
 *
 */
public class ObserverTester {

	public static void main(String[] args) {
		// list of data
		ArrayList<Double> data = new ArrayList<Double>();

		// add default values
		data.add(new Double(33.0));
		data.add(new Double(44.0));
		data.add(new Double(22.0));
		data.add(new Double(22.0));

		// create data model and text frame
		final DataModel model = new DataModel(data);
		final TextFrame frame = new TextFrame(model);

		// create a barframe
		final BarFrame barFrame = new BarFrame(model);

		// add mouse listener and attach it to barFrame
		barFrame.addMouseListener(new MouseAdapter() {
			@Override
			public void mousePressed(MouseEvent e) {

				double x = e.getX();
				double y = e.getY();

				double whichBar = (y / (double) (barFrame.getHeight())) * (model.data.size());
				System.out.println((int) whichBar + " Bar clicked");
				double max = model.getMax();
				double value = (x / (double) barFrame.getWidth()) * max;

				if (whichBar > 0 && whichBar < 1.35) {
					model.update(0, value);
				}

				else if (whichBar > 1.35 && whichBar < 2.2) {
					model.update(1, value);
				} else if (whichBar > 2.2 && whichBar < 3.0) {
					model.update(2, value);
				} else {
					model.update(3, value);
				}

				for (int i = 0; i != model.data.size(); i++) {
					String s = model.data.get(i).toString();
					frame.fieldList[i].setText(s);
				}
				frame.repaint();
			}
		});
		model.attach(barFrame);
	}
}
